version: 2
jobs:
  build:
    working_directory: ~/my_ser_starter
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build
          command: npm run build
      - run:
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - save_cache:
          key: v1-repo-{{ checksum ".circle-sha" }}
          paths:
            - ~/my_ser_starter

  test:
    working_directory: ~/my_ser_starter
    docker:
      - image: circleci/node:8
    steps:
      - run:  
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - run:
          name: Install deps
          command: sudo apt-get update && apt-get install -yq --no-install-recommends libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 libnss3 
      - restore_cache:
          keys:
            - v1-repo-{{ checksum ".circle-sha" }}
      - run:
          name: Test
          command: npm test
  deploy-dev:
    working_directory: ~/my_ser_starter
    docker:
      - image: circleci/node:8
    steps:
      - run:  
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - v1-repo-{{ checksum ".circle-sha" }}
      - run:
          name: Dev deploy
          command: npm run deploy -- --stage dev
  deploy-prod:
    working_directory: ~/my_ser_starter
    docker:
      - image: circleci/node:8
    steps:
      - run:  
          name: save SHA to a file
          command: echo $CIRCLE_SHA1 > .circle-sha
      - restore_cache:
          keys:
            - v1-repo-{{ checksum ".circle-sha" }}
      - run:
          name: prod deploy
          command: npm run deploy -- --stage prod
      - store_artifacts:
          path: /.serverless
          destination: build
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
              - build
      - deploy-dev:
          requires:
              - test
      - deploy-prod:
          requires:
              - deploy-dev
          filters:
            branches:
              only: master